
# Set Release Folder - 'dev' - to indicate this is current development code
- include: ../../create-release-folders/tasks/create-release-folders.yaml 
  vars:
    folder: dev

- name: Dump current DB to craft-dev.sql
  local_action: mysql_db 
    state=dump 
    name=craft 
    target="{{ local_db_dump_dir }}/craft-dev.sql"

- name: "Dump remote DB to backup on remote server {{ db_dump_dir }}/craft-remote-before-push.sql"
  mysql_db: 
    state: dump 
    name: "{{ db_name }} "
    target: "{{ db_dump_dir }}/craft-remote-before-push.sql"

- name: Push local DB to remote
  synchronize: 
    mode: push 
    src: "{{ local_db_dump_dir }}/craft-dev.sql"
    dest: "{{ release_folder }}"

# Optionally import the DB automatically 
# two different methods depending on whether it's coming from a quick and dirty deploy-local
# or a proper timestamp/git release
# On Production we probably won't do this...

- name: "Import database on remote"
  mysql_db: 
    state: import
    name: "{{ db_name }}"
    target: "{{ release_folder }}/craft-dev.sql"
  when: deploy_local_db is defined and import_db is defined

# - name: "Import database on server (db from git repo)"
#   mysql_db: name="{{ db_name }} " state=import target="{{ release_folder }}/dbdump/craft.sql"
#   when: deploy_repo_db is defined and import_db is defined
